use v6;
#  -- DO NOT EDIT --
# generated by: gen-properties.pl --grammar=CSS::Language::CSS3::Fonts::Spec::Grammar --proforma etc/css3x-font-properties.txt

grammar CSS::Language::CSS3::Fonts::Spec::Grammar {

    #= font: [ [ <‘font-style’> || <font-variant-css21> || <‘font-weight’> || <‘font-stretch’> ]? <‘font-size’> [ / <‘line-height’> ]? <‘font-family’> ] | caption | icon | menu | message-box | small-caption | status-bar
    rule decl:sym<font> {:i (font) ':'  [ <proforma> || <expr=.expr-font> || <any-args> ] }
    rule expr-font {:i [ [ [ [:my @*SEEN; <expr-font-style> <!seen(0)> | <font-variant-css21> <!seen(1)> | <expr-font-weight> <!seen(2)> | <expr-font-stretch> <!seen(3)> ]+ ]? <expr-font-size> [ '/' <expr-line-height> ]? <expr-font-family> ] | [ caption | icon | menu | message\-box | small\-caption | status\-bar ] & <keyw> ] }

    #= font-family: [ <family-name> | <generic-family> ]#
    rule decl:sym<font-family> {:i (font\-family) ':'  [ <proforma> || <expr=.expr-font-family> || <any-args> ] }
    rule expr-font-family {:i [ [ <family-name> | <generic-family> ] ] +% ',' }

    #= font-feature-settings: normal | <feature-tag-value>#
    rule decl:sym<font-feature-settings> {:i (font\-feature\-settings) ':'  [ <proforma> || <expr=.expr-font-feature-settings> || <any-args> ] }
    rule expr-font-feature-settings {:i [ normal & <keyw> | <feature-tag-value> +% ',' ] }

    #= font-kerning: auto | normal | none
    rule decl:sym<font-kerning> {:i (font\-kerning) ':'  [ <proforma> || <expr=.expr-font-kerning> || <any-args> ] }
    rule expr-font-kerning {:i [ auto | normal | none ] & <keyw> }

    #= font-language-override: normal | <string>
    rule decl:sym<font-language-override> {:i (font\-language\-override) ':'  [ <proforma> || <expr=.expr-font-language-override> || <any-args> ] }
    rule expr-font-language-override {:i [ normal & <keyw> | <string> ] }

    #= font-size: <absolute-size> | <relative-size> | <length> | <percentage>
    rule decl:sym<font-size> {:i (font\-size) ':'  [ <proforma> || <expr=.expr-font-size> || <any-args> ] }
    rule expr-font-size {:i [ <absolute-size> | <relative-size> | <length> | <percentage> ] }

    #= font-size-adjust: none | auto | <number>
    rule decl:sym<font-size-adjust> {:i (font\-size\-adjust) ':'  [ <proforma> || <expr=.expr-font-size-adjust> || <any-args> ] }
    rule expr-font-size-adjust {:i [ [ none | auto ] & <keyw> | <number> ] }

    #= font-stretch: normal | ultra-condensed | extra-condensed | condensed | semi-condensed | semi-expanded | expanded | extra-expanded | ultra-expanded
    rule decl:sym<font-stretch> {:i (font\-stretch) ':'  [ <proforma> || <expr=.expr-font-stretch> || <any-args> ] }
    rule expr-font-stretch {:i [ normal | ultra\-condensed | extra\-condensed | condensed | semi\-condensed | semi\-expanded | expanded | extra\-expanded | ultra\-expanded ] & <keyw> }

    #= font-style: normal | italic | oblique
    rule decl:sym<font-style> {:i (font\-style) ':'  [ <proforma> || <expr=.expr-font-style> || <any-args> ] }
    rule expr-font-style {:i [ normal | italic | oblique ] & <keyw> }

    #= font-synthesis: none | [ weight || style ]
    rule decl:sym<font-synthesis> {:i (font\-synthesis) ':'  [ <proforma> || <expr=.expr-font-synthesis> || <any-args> ] }
    rule expr-font-synthesis {:i [ none & <keyw> | [ [:my @*SEEN; weight & <keyw> <!seen(0)> | style & <keyw> <!seen(1)> ]+ ] ] }

    #= font-variant: normal | none | [ <common-lig-values> || <discretionary-lig-values> || <historical-lig-values> || <contextual-alt-values> || stylistic(<feature-value-name>) || historical-forms || styleset(<feature-value-name>#) || character-variant(<feature-value-name>#) || swash(<feature-value-name>) || ornaments(<feature-value-name>) || annotation(<feature-value-name>) || [ small-caps | all-small-caps | petite-caps | all-petite-caps | unicase | titling-caps ] || <numeric-figure-values> || <numeric-spacing-values> || <numeric-fraction-values> || ordinal || slashed-zero || <east-asian-variant-values> || <east-asian-width-values> || ruby ]#
    rule decl:sym<font-variant> {:i (font\-variant) ':'  [ <proforma> || <expr=.expr-font-variant> || <any-args> ] }
    rule expr-font-variant {:i [ [ normal | none ] & <keyw> | [ [:my @*SEEN; <common-lig-values> <!seen(0)> | <discretionary-lig-values> <!seen(1)> | <historical-lig-values> <!seen(2)> | <contextual-alt-values> <!seen(3)> | <stylistic> <!seen(4)> | historical\-forms & <keyw> <!seen(5)> | <styleset> <!seen(6)> | <character-variant> <!seen(7)> | <swash> <!seen(8)> | <ornaments> <!seen(9)> | <annotation> <!seen(10)> | [ [ small\-caps | all\-small\-caps | petite\-caps | all\-petite\-caps | unicase | titling\-caps ] & <keyw> ] <!seen(11)> | <numeric-figure-values> <!seen(12)> | <numeric-spacing-values> <!seen(13)> | <numeric-fraction-values> <!seen(14)> | ordinal & <keyw> <!seen(15)> | slashed\-zero & <keyw> <!seen(16)> | <east-asian-variant-values> <!seen(17)> | <east-asian-width-values> <!seen(18)> | ruby & <keyw> <!seen(19)> ]+ ] +% ',' ] }

    #= font-variant-alternates: normal | [ stylistic(<feature-value-name>) || historical-forms || styleset(<feature-value-name>#) || character-variant(<feature-value-name>#) || swash(<feature-value-name>) || ornaments(<feature-value-name>) || annotation(<feature-value-name>) ]
    rule decl:sym<font-variant-alternates> {:i (font\-variant\-alternates) ':'  [ <proforma> || <expr=.expr-font-variant-alternates> || <any-args> ] }
    rule expr-font-variant-alternates {:i [ normal & <keyw> | [ [:my @*SEEN; <stylistic> <!seen(0)> | historical\-forms & <keyw> <!seen(1)> | <styleset> <!seen(2)> | <character-variant> <!seen(3)> | <swash> <!seen(4)> | <ornaments> <!seen(5)> | <annotation> <!seen(6)> ]+ ] ] }

    #= font-variant-caps: normal | small-caps | all-small-caps | petite-caps | all-petite-caps | unicase | titling-caps
    rule decl:sym<font-variant-caps> {:i (font\-variant\-caps) ':'  [ <proforma> || <expr=.expr-font-variant-caps> || <any-args> ] }
    rule expr-font-variant-caps {:i [ normal | small\-caps | all\-small\-caps | petite\-caps | all\-petite\-caps | unicase | titling\-caps ] & <keyw> }

    #= font-variant-east-asian: normal | [ <east-asian-variant-values> || <east-asian-width-values> || ruby ]
    rule decl:sym<font-variant-east-asian> {:i (font\-variant\-east\-asian) ':'  [ <proforma> || <expr=.expr-font-variant-east-asian> || <any-args> ] }
    rule expr-font-variant-east-asian {:i [ normal & <keyw> | [ [:my @*SEEN; <east-asian-variant-values> <!seen(0)> | <east-asian-width-values> <!seen(1)> | ruby & <keyw> <!seen(2)> ]+ ] ] }

    #= font-variant-ligatures: normal | none | [ <common-lig-values> || <discretionary-lig-values> || <historical-lig-values> || <contextual-alt-values> ]
    rule decl:sym<font-variant-ligatures> {:i (font\-variant\-ligatures) ':'  [ <proforma> || <expr=.expr-font-variant-ligatures> || <any-args> ] }
    rule expr-font-variant-ligatures {:i [ [ normal | none ] & <keyw> | [ [:my @*SEEN; <common-lig-values> <!seen(0)> | <discretionary-lig-values> <!seen(1)> | <historical-lig-values> <!seen(2)> | <contextual-alt-values> <!seen(3)> ]+ ] ] }

    #= font-variant-numeric: normal | [ <numeric-figure-values> || <numeric-spacing-values> || <numeric-fraction-values> || ordinal || slashed-zero ]
    rule decl:sym<font-variant-numeric> {:i (font\-variant\-numeric) ':'  [ <proforma> || <expr=.expr-font-variant-numeric> || <any-args> ] }
    rule expr-font-variant-numeric {:i [ normal & <keyw> | [ [:my @*SEEN; <numeric-figure-values> <!seen(0)> | <numeric-spacing-values> <!seen(1)> | <numeric-fraction-values> <!seen(2)> | ordinal & <keyw> <!seen(3)> | slashed\-zero & <keyw> <!seen(4)> ]+ ] ] }

    #= font-variant-position: normal | sub | super
    rule decl:sym<font-variant-position> {:i (font\-variant\-position) ':'  [ <proforma> || <expr=.expr-font-variant-position> || <any-args> ] }
    rule expr-font-variant-position {:i [ normal | sub | super ] & <keyw> }

    #= font-weight: normal | bold | bolder | lighter | 100 | 200 | 300 | 400 | 500 | 600 | 700 | 800 | 900
    rule decl:sym<font-weight> {:i (font\-weight) ':'  [ <proforma> || <expr=.expr-font-weight> || <any-args> ] }
    rule expr-font-weight {:i [ [ normal | bold | bolder | lighter ] & <keyw> | [ 100 | 200 | 300 | 400 | 500 | 600 | 700 | 800 | 900 ] & <number> ] }

    #= line-height: normal | <number> | <length> | <percentage>
    rule decl:sym<line-height> {:i (line\-height) ':'  [ <proforma> || <expr=.expr-line-height> || <any-args> ] }
    rule expr-line-height {:i [ normal & <keyw> | <number> | <length> | <percentage> ] }
}
